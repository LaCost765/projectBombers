***Как оформляем код***

1)Имена объектов
-переменные называем осмысленно, если состоит из нескольких слов, объединяем в одно таким 
образом: someExampleVariable
-для имен функций такой же принцип, но с приставкой f_: f_someExampleFunction
-имена классов и структур с большой буквы: Picture, Hero и тд
-к именам указателей добавляем приставку p_: p_somePointer
-имена всех констант пишем капсом: HEIGHT, WIDTH, PI и тд

2)Оформление и отступы
-условие блока и тело блока пишем на разных строках, то есть:
if ()
  {

  }
А не:
if () {

}
-для всех блоков соблюдаем отступы (по 1 tab-у на каждый уровень вложенности)
-В файле с функцией main оная является единственной функцией, остальные в других файлах
-В этом же файле сначала подключаем библиотеки, потом заголовочные файлы, потом инструкции #define, 
потом фукнция main
-при необходимости проинициализировать переменную при объявлении делаем это в одну строку
-соблядаем пробелы для rvalue и lvalue: int a = 5, а не int a=5, if (b == 0), а не if (b==0)

3)Общее
-стараемся делать блоки, размером не больше одного экрана, при необходимости создаем вспомогательные функции
-по возможности комментируем код, особенно в спорных или трудных местах
-по возможности не определяем переменные одного типа в одной строке
-у каждого будет свой файл с определениями функций и с прототипами, эти файлы будут подключены к 
файлу с функцией main, соответственно, свои функции пишем в своих файлах (для упрощения поиска ошибок)
-общие типы и объекты будут занесены в отдельный файл



